
.decl A(n:number,d:number) // fuzzable relation
.input A()
.decl B(n:number,s:number) // fuzzable relation
.input B()

.decl C1(n:number,id:number) // fuzzable relation
.output C1()
C1(n,id) :-   A(n,id),    B(id,max  s : {A(n,d), B(d,s)}).

.decl C2(n:number,id:number,s:number) // fuzzable relation
.output C2()
C2(n,id,Y) :-   A(n,id),    B(id,Y),   Y = max  s : {A(n,d), B(d,s)}.

.decl C3(n:number,id:number) // fuzzable relation
.output C3()
C3(n,id) :-   A(n,id),   B(id,Y),   2 * Y + 1 =  2 * max  s : {A(n,d), B(d,s)} + 1.

.decl C4(n:number,id:number) // fuzzable relation
.output C4()
C4(n,id) :-    A(n,id),   B(id,Y),   Y =  max  s : {A(n,d), B(d,s)} .

